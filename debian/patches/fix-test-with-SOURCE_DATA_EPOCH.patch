From 8ce3e4e159ffe5b98272836a33e5c6c5657fdb87 Mon Sep 17 00:00:00 2001
From: Samuel Karp <samuelkarp@google.com>
Date: Fri, 3 Mar 2023 14:54:23 -0800
Subject: [PATCH] epoch: fix unit test when SOURCE_DATE_EPOCH is set

Fixes https://github.com/containerd/containerd/issues/8200

Signed-off-by: Samuel Karp <samuelkarp@google.com>
---
 pkg/epoch/epoch.go      |  2 +-
 pkg/epoch/epoch_test.go | 14 ++++++++++++++
 2 files changed, 15 insertions(+), 1 deletion(-)

--- a/pkg/epoch/epoch.go
+++ b/pkg/epoch/epoch.go
@@ -34,7 +34,7 @@
 // If the env var is not set, SourceDateEpoch returns nil without an error.
 func SourceDateEpoch() (*time.Time, error) {
 	v, ok := os.LookupEnv(SourceDateEpochEnv)
-	if !ok {
+	if !ok || v == "" {
 		return nil, nil // not an error
 	}
 	i64, err := strconv.ParseInt(v, 10, 64)
--- a/pkg/epoch/epoch_test.go
+++ b/pkg/epoch/epoch_test.go
@@ -36,13 +36,27 @@
 func TestSourceDateEpoch(t *testing.T) {
 	if s, ok := os.LookupEnv(SourceDateEpochEnv); ok {
 		t.Logf("%s is already set to %q, unsetting", SourceDateEpochEnv, s)
+		// see https://github.com/golang/go/issues/52817#issuecomment-1131339120
 		t.Setenv(SourceDateEpochEnv, "")
+		os.Unsetenv(SourceDateEpochEnv)
 	}
 
 	t.Run("WithoutSourceDateEpoch", func(t *testing.T) {
 		vp, err := SourceDateEpoch()
 		require.NoError(t, err)
 		require.Nil(t, vp)
+
+		now := time.Now()
+		v := SourceDateEpochOrNow()
+		require.True(t, rightAfter(now, v))
+	})
+
+	t.Run("WithEmptySourceDateEpoch", func(t *testing.T) {
+		t.Setenv(SourceDateEpochEnv, "")
+
+		vp, err := SourceDateEpoch()
+		require.NoError(t, err)
+		require.Nil(t, vp)
 
 		now := time.Now()
 		v := SourceDateEpochOrNow()
